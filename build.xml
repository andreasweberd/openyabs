<?xml version="1.0" encoding="UTF-8"?>
<!-- For automated build task using asl
<project name="yabs" default="dist">
    <property name="java-build.src-dir" location="src"/>
    <import file="asl/asl-java-build.xml"/>

    <property name="java-build.src-dir" 		location="src/main/java"/>
    <property name="java-build.lib-dir" 		location="lib"/>
    <property name="java-build.classes-dir" 	location="${common.target-dir}/classes"/>
    <property name="java-build.dist-ext" 		value=".jar"/>
    <property name="java-build.dist-filename" 	value="${ant.project.name}${java-build.dist-ext}"/>
    <property name="java-build.dist-file" 		location="${common.dist-dir}/${java-build.dist-filename}"/>
    <property name="java-build.jar-dir"         location="${common.dist-dir}"/>
	<property name="java-build.jar-file"        location="${java-build.dist-file}"/>
    <property name="java-build.source-ver" 		value="1.5"/>
    <property name="java-build.target-ver" 		value="1.5"/>
    <property name="java-build.debug" 			value="on"/>
    <property name="java-build.jar-main-class" 		value="mpv5.Main"/>


     <target name="copy-resources"
            description="Copies resources in preparation to be packaged in jar">
        <copy todir="${java-build.classes-dir}">
            <fileset dir="${java-build.src-dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>

        <copy todir="${common.dist-dir}/lib" flatten="true" includeEmptyDirs="false">
            <fileset dir="${java-build.lib-dir}">
                <include name="**/*.jar"/>
                <include name="**/*.so"/>
                <include name="**/*.dll"/>
            </fileset>
        </copy>
    </target>
</project>
-->

<project name="yabs" default="default" basedir=".">
    <description>Builds, tests, and runs the project yabs.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <target name="-post-compile">
        <copy todir="${dist.dir}/lib">
            <fileset dir="lib/jni/" />
        </copy>
    </target>

  <!-- Uncomment this section to build the rpm  
  <rpm
        specFile="yabs1.spec"
        topDir="install/rpm"
        cleanBuildDir="true"
        failOnError="true"/>
  -->
  <!-- Uncomment this section to sign the jars -->
    <target name="-post-jar">
        <exec dir="${dist.dir}/../security" executable="./generate_key.sh" os="Linux" failonerror="false"/>
        <exec dir="${dist.dir}/../security" executable="./signjars.sh" os="Linux" failonerror="false" />
    </target>
<!---->

  <target name="MacPack" depends="jar" description="Build Yabs for Mac">

    <taskdef name="jarbundler"
             classpath="ant/jarbundler-2.3.1-JDK5.jar" 
             classname="net.sourceforge.jarbundler.JarBundler"/>

    <jarbundler dir="${basedir}/mac" verbose="true" showPlist="false"
                name="${ant.project.name}"
                copyright=""
                developmentregion="German"
                shortname="Yabs - Applepie"
                stubfile="JavaApplicationStub"
                mainclass="mpv5.Main"
                icon="ant/${ant.project.name}.icns"
                allowMixedLocalizations="true"
                jvmversion="1.5+"
                version="${version}"
                infostring="${ant.project.name}, ${copyright}"
                build="${buildnumber}"
                bundleid="mpv5.Main"> 

      <!-- Adjust the look, feel and behavior -->
      <javaproperty name="apple.laf.useScreenMenuBar" value="true"/>


      <!-- Just proving we can included these files.  Might use them in About boxes -->                
      <resourcefilelist dir="dist" files="README.TXT"/>
 
      <jarfilelist dir="${basedir}/dist" files="${ant.project.name}.jar"/>
      <jarfileset dir="${basedir}/dist/lib" includes="*.jar">
          <exclude name="**/*source*"/>
          <exclude name="**/*javadoc*"/>
      </jarfileset>
      


      <!-- Copy the HelpBooks to the language specific folders            -->
      <!--  English will use the foldername and book name from the Bundle -->
      <!--  German or 'de' will use the custom folder name and book name  -->
     
      <!--<HelpBook locale="English">
      	<fileset dir="HelpBook/English" />
      	<fileset dir="HelpBook/common" />
      </HelpBook>
   
      <helpbook foldername="Hilfebuch" name="Hallo Welt Hilfe" locale="German">
      	<fileset dir="HelpBook/German" />
      	<fileset dir="HelpBook/common" />
      </helpbook>
      
      <helpbook name="HjÃ¤lp" locale="sv">
      	<fileset dir="HelpBook/Swedish" />
      	<fileset dir="HelpBook/common" />
      </helpbook>
-->

      
    </jarbundler>
    
  </target>


<!--
Build a .deb:

apt-get install alien
alien paketname.rpm
dpkg -i paketname.deb

    -->
    <target name="package-for-store" depends="jar">

        <!-- Change the value of this property to be the name of your JAR,
             minus the .jar extension. It should not have spaces.
             <property name="store.jar.name" value="MyJarName"/>
        -->
        <property name="store.jar.name" value="yabs"/>


        <!-- don't edit below this line -->

        <property name="store.dir" value="store"/>
        <property name="store.jar" value="${store.dir}/${store.jar.name}.jar"/>

        <echo message="Packaging ${application.title} into a single JAR at ${store.jar}"/>

        <delete dir="${store.dir}"/>
        <mkdir dir="${store.dir}"/>

        <jar destfile="${store.dir}/temp_final.jar" filesetmanifest="skip">
            <zipgroupfileset dir="dist" includes="*.jar"/>
            <zipgroupfileset dir="dist/lib" includes="*.jar"/>

            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>

        <zip destfile="${store.jar}">
            <zipfileset src="${store.dir}/temp_final.jar"
                        excludes="META-INF/*.SF, META-INF/*.DSA, META-INF/*.RSA"/>
        </zip>

        <delete file="${store.dir}/temp_final.jar"/>

    </target>
    
     
</project>
