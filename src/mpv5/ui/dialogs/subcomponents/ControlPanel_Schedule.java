/*
 *  This file is part of YaBS.
 *
 *      YaBS is free software: you can redistribute it and/or modify
 *      it under the terms of the GNU General Public License as published by
 *      the Free Software Foundation, either version 3 of the License, or
 *      (at your option) any later version.
 *
 *      YaBS is distributed in the hope that it will be useful,
 *      but WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *      GNU General Public License for more details.
 *
 *      You should have received a copy of the GNU General Public License
 *      along with YaBS.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * GeneralListPanel.java
 *
 * Created on 03.04.2009, 15:26:37
 */
package mpv5.ui.dialogs.subcomponents;

import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.table.TableCellRenderer;
import mpv5.data.PropertyStore;
import mpv5.db.common.Context;
import mpv5.db.common.DatabaseObject;
import mpv5.db.common.NodataFoundException;
import mpv5.db.objects.ScheduleTypes;
import mpv5.db.objects.User;
import mpv5.globals.Messages;
import mpv5.logging.Log;
import mpv5.ui.dialogs.ControlApplet;
import mpv5.ui.dialogs.Popup;
import mpv5.ui.panels.MPControlPanel;
import mpv5.utils.models.MPTableModel;
import mpv5.utils.renderer.TableCellRendererForDatabaseObjects;
import mpv5.utils.tables.TableFormat;

/**
 *
 *
 */
public class ControlPanel_Schedule extends javax.swing.JPanel implements ControlApplet {

    private static final long serialVersionUID = 1L;
    TableCellRendererForDatabaseObjects rend = new TableCellRendererForDatabaseObjects();
    private PropertyStore oldvalues;
    private ScheduleTypes s;

    /**
     * Creates new form GeneralListPanel
     */
    public ControlPanel_Schedule() {
        initComponents();

        labeledCombobox2.setContext(Context.getUser());
        labeledCombobox2.setSearchEnabled(true);
        labeledCombobox2.setEditable(true);
        labeledCombobox2.triggerSearch();

        initTable();
        setData();
        loadPropertys();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labeledCombobox2 = new mpv5.ui.beans.LabeledCombobox();
        jLabel1 = new javax.swing.JLabel();
        labeledTextField2 = new mpv5.ui.beans.LabeledTextField();
        jPanel2 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        copy = new javax.swing.JButton();
        copy1 = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new  mpv5.ui.misc.MPTable(this) {
            public Component prepareRenderer(TableCellRenderer renderer,
                int rowIndex, int vColIndex) {
                Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);
                if (c instanceof JComponent) {
                    JComponent jc = (JComponent)c;
                    jc.setToolTipText(String.valueOf(getValueAt(rowIndex, vColIndex)));
                }
                return c;
            }
        };
        jPanel4 = new javax.swing.JPanel();
        offer = new javax.swing.JCheckBox();
        orders = new javax.swing.JCheckBox();
        confi = new javax.swing.JCheckBox();
        deliv = new javax.swing.JCheckBox();
        bills = new javax.swing.JCheckBox();
        offer1 = new javax.swing.JCheckBox();
        orders1 = new javax.swing.JCheckBox();
        confi1 = new javax.swing.JCheckBox();
        deliv1 = new javax.swing.JCheckBox();
        bills1 = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        bill_warn = new mpv5.ui.beans.LabeledTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bill_alert = new mpv5.ui.beans.LabeledTextField();
        order_alert = new mpv5.ui.beans.LabeledTextField();
        order_warn = new mpv5.ui.beans.LabeledTextField();
        offer_alert = new mpv5.ui.beans.LabeledTextField();
        offer_warn = new mpv5.ui.beans.LabeledTextField();
        deliv_alert = new mpv5.ui.beans.LabeledTextField();
        deliv_warn = new mpv5.ui.beans.LabeledTextField();
        confi_alert = new mpv5.ui.beans.LabeledTextField();
        confi_warn = new mpv5.ui.beans.LabeledTextField();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        java.util.ResourceBundle bundle = mpv5.i18n.LanguageManager.getBundle();; // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("RemindPanel.border.title"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ControlPanel_Schedule.jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        labeledCombobox2.set_Label(bundle.getString("ControlPanel_Schedule.labeledCombobox2._Label")); // NOI18N
        labeledCombobox2.setName("labeledCombobox2"); // NOI18N

        jLabel1.setText(bundle.getString("ControlPanel_Schedule.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        labeledTextField2.set_Label(bundle.getString("ControlPanel_Schedule.labeledTextField2._Label")); // NOI18N
        labeledTextField2.setName("labeledTextField2"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labeledCombobox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labeledTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
                .addGap(306, 306, 306))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labeledCombobox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labeledTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

//$2java.awt.Color(255, 255, 255));
        jPanel2.setName("jPanel2"); // NOI18N

        add.setText(bundle.getString("ControlPanel_Schedule.add.text")); // NOI18N
        add.setName("add"); // NOI18N
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel2.add(add);

        copy.setText(bundle.getString("ControlPanel_Schedule.copy.text")); // NOI18N
        copy.setToolTipText(bundle.getString("ControlPanel_Schedule.copy.toolTipText")); // NOI18N
        copy.setName("copy"); // NOI18N
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });
        jPanel2.add(copy);

        copy1.setText(bundle.getString("ControlPanel_Schedule.copy1.text")); // NOI18N
        copy1.setToolTipText(bundle.getString("ControlPanel_Schedule.copy1.toolTipText")); // NOI18N
        copy1.setName("copy1"); // NOI18N
        copy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copy1ActionPerformed(evt);
            }
        });
        jPanel2.add(copy1);

        remove.setText(bundle.getString("ControlPanel_Schedule.remove.text")); // NOI18N
        remove.setName("remove"); // NOI18N
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPanel2.add(remove);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ControlPanel_Schedule.jPanel3.border.title"))); // NOI18N
        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoCreateRowSorter(true);
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ControlPanel_Schedule.jPanel4.border.title"))); // NOI18N
        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        offer.setText(bundle.getString("ControlPanel_Schedule.offer.text")); // NOI18N
        offer.setEnabled(false);
        offer.setName("offer"); // NOI18N
        jPanel4.add(offer, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        orders.setText(bundle.getString("ControlPanel_Schedule.orders.text")); // NOI18N
        orders.setEnabled(false);
        orders.setName("orders"); // NOI18N
        jPanel4.add(orders, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        confi.setText(bundle.getString("ControlPanel_Schedule.confi.text")); // NOI18N
        confi.setEnabled(false);
        confi.setName("confi"); // NOI18N
        jPanel4.add(confi, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        deliv.setText(bundle.getString("ControlPanel_Schedule.deliv.text")); // NOI18N
        deliv.setEnabled(false);
        deliv.setName("deliv"); // NOI18N
        jPanel4.add(deliv, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, -1, 30));

        bills.setText(bundle.getString("ControlPanel_Schedule.bills.text")); // NOI18N
        bills.setEnabled(false);
        bills.setName("bills"); // NOI18N
        jPanel4.add(bills, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, -1, 30));

        offer1.setText(bundle.getString("ControlPanel_Schedule.offer1.text")); // NOI18N
        offer1.setName("offer1"); // NOI18N
        offer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offer1ActionPerformed(evt);
            }
        });
        jPanel4.add(offer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        orders1.setText(bundle.getString("ControlPanel_Schedule.orders1.text")); // NOI18N
        orders1.setName("orders1"); // NOI18N
        orders1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orders1ActionPerformed(evt);
            }
        });
        jPanel4.add(orders1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        confi1.setText(bundle.getString("ControlPanel_Schedule.confi1.text")); // NOI18N
        confi1.setName("confi1"); // NOI18N
        confi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confi1ActionPerformed(evt);
            }
        });
        jPanel4.add(confi1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        deliv1.setText(bundle.getString("ControlPanel_Schedule.deliv1.text")); // NOI18N
        deliv1.setName("deliv1"); // NOI18N
        deliv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliv1ActionPerformed(evt);
            }
        });
        jPanel4.add(deliv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 30));

        bills1.setText(bundle.getString("ControlPanel_Schedule.bills1.text")); // NOI18N
        bills1.setName("bills1"); // NOI18N
        bills1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bills1ActionPerformed(evt);
            }
        });
        jPanel4.add(bills1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, 30));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ControlPanel_Schedule.jPanel8.border.title"))); // NOI18N
        jPanel8.setName("jPanel8"); // NOI18N

        bill_warn.set_Label(bundle.getString("ControlPanel_Schedule.bill_warn._Label")); // NOI18N
        bill_warn.set_Text(bundle.getString("ControlPanel_Schedule.bill_warn._Text")); // NOI18N
        bill_warn.setName("bill_warn"); // NOI18N

        jLabel2.setText(bundle.getString("ControlPanel_Schedule.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(bundle.getString("ControlPanel_Schedule.jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        bill_alert.set_Label(bundle.getString("ControlPanel_Schedule.bill_alert._Label")); // NOI18N
        bill_alert.set_Text(bundle.getString("ControlPanel_Schedule.bill_alert._Text")); // NOI18N
        bill_alert.setName("bill_alert"); // NOI18N

        order_alert.set_Label(bundle.getString("ControlPanel_Schedule.order_alert._Label")); // NOI18N
        order_alert.set_Text(bundle.getString("ControlPanel_Schedule.order_alert._Text")); // NOI18N
        order_alert.setName("order_alert"); // NOI18N

        order_warn.set_Label(bundle.getString("ControlPanel_Schedule.order_warn._Label")); // NOI18N
        order_warn.set_Text(bundle.getString("ControlPanel_Schedule.order_warn._Text")); // NOI18N
        order_warn.setName("order_warn"); // NOI18N

        offer_alert.set_Label(bundle.getString("ControlPanel_Schedule.offer_alert._Label")); // NOI18N
        offer_alert.set_Text(bundle.getString("ControlPanel_Schedule.offer_alert._Text")); // NOI18N
        offer_alert.setName("offer_alert"); // NOI18N

        offer_warn.set_Label(bundle.getString("ControlPanel_Schedule.offer_warn._Label")); // NOI18N
        offer_warn.set_Text(bundle.getString("ControlPanel_Schedule.offer_warn._Text")); // NOI18N
        offer_warn.setName("offer_warn"); // NOI18N

        deliv_alert.set_Label(bundle.getString("ControlPanel_Schedule.deliv_alert._Label")); // NOI18N
        deliv_alert.set_Text(bundle.getString("ControlPanel_Schedule.deliv_alert._Text")); // NOI18N
        deliv_alert.setName("deliv_alert"); // NOI18N

        deliv_warn.set_Label(bundle.getString("ControlPanel_Schedule.deliv_warn._Label")); // NOI18N
        deliv_warn.set_Text(bundle.getString("ControlPanel_Schedule.deliv_warn._Text")); // NOI18N
        deliv_warn.setName("deliv_warn"); // NOI18N

        confi_alert.set_Label(bundle.getString("ControlPanel_Schedule.confi_alert._Label")); // NOI18N
        confi_alert.set_Text(bundle.getString("ControlPanel_Schedule.confi_alert._Text")); // NOI18N
        confi_alert.setName("confi_alert"); // NOI18N

        confi_warn.set_Label(bundle.getString("ControlPanel_Schedule.confi_warn._Label")); // NOI18N
        confi_warn.set_Text(bundle.getString("ControlPanel_Schedule.confi_warn._Text")); // NOI18N
        confi_warn.setName("confi_warn"); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(order_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(order_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(offer_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(offer_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(deliv_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deliv_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(confi_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(confi_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(bill_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bill_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bill_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bill_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(order_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(order_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(offer_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offer_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deliv_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliv_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confi_warn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confi_alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

//$2java.awt.Color(255, 255, 255));
        jPanel6.setName("jPanel6"); // NOI18N
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton2.setText(bundle.getString("ControlPanel_Schedule.jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton2);

        jButton1.setText(bundle.getString("ControlPanel_Schedule.jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton1);

        jButton5.setText(bundle.getString("ControlPanel_Schedule.jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 455, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        ScheduleTypes s1 = new ScheduleTypes();
        s1.setCname(labeledTextField2.getText());
        s1.setUser(Integer.parseInt(labeledCombobox2.getSelectedItem().getId()));
        s1.save();
        setData();
}//GEN-LAST:event_addActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        s = (ScheduleTypes) ((MPTableModel) jTable1.getModel()).getValueAt(jTable1.convertRowIndexToModel(jTable1.getSelectedRow()), 0);
        labeledTextField2.setText(s.__getCname());
        labeledCombobox2.setSelectedItem(User.getUsername(s.__getUserSids()));
    }//GEN-LAST:event_jTable1MouseClicked

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        if (s.delete()) {
            ((MPTableModel) jTable1.getModel()).removeRow(jTable1.convertRowIndexToModel(jTable1.getSelectedRow()));
        }
    }//GEN-LAST:event_removeActionPerformed

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
        ScheduleTypes s2 = new ScheduleTypes();
        s2.setCname(labeledTextField2.getText());
        s2.setUser(User.getCurrentUser().getID());
        s2.save();
        setData();
    }//GEN-LAST:event_copyActionPerformed

    private void copy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copy1ActionPerformed
        s.setCname(labeledTextField2.getText());
        s.setUser(User.getCurrentUser().getID());
        s.save();
        setData();
    }//GEN-LAST:event_copy1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setPropertys();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setPropertys();
        mpv5.db.objects.User.getCurrentUser().saveProperties();
        Popup.notice(Messages.RESTART_REQUIRED);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        ControlPanel_AdvancedUserProperties c = new ControlPanel_AdvancedUserProperties();
        MPControlPanel.instanceOf().openDetails(c);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void offer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offer1ActionPerformed
        if (offer1.isSelected() == true) {
            offer.setEnabled(true);
        } else {
            offer.setEnabled(false);
        }
    }//GEN-LAST:event_offer1ActionPerformed

    private void orders1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orders1ActionPerformed
        if (orders1.isSelected() == true) {
            orders.setEnabled(true);
        } else {
            orders.setEnabled(false);
        }
    }//GEN-LAST:event_orders1ActionPerformed

    private void confi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confi1ActionPerformed
        if (confi1.isSelected() == true) {
            confi.setEnabled(true);
        } else {
            confi.setEnabled(false);
        }
    }//GEN-LAST:event_confi1ActionPerformed

    private void deliv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliv1ActionPerformed
        if (deliv1.isSelected() == true) {
            deliv.setEnabled(true);
        } else {
            deliv.setEnabled(false);
        }
    }//GEN-LAST:event_deliv1ActionPerformed

    private void bills1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bills1ActionPerformed
        if (bills1.isSelected() == true) {
            bills.setEnabled(true);
        } else {
            bills.setEnabled(false);
        }
    }//GEN-LAST:event_bills1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private mpv5.ui.beans.LabeledTextField bill_alert;
    private mpv5.ui.beans.LabeledTextField bill_warn;
    private javax.swing.JCheckBox bills;
    private javax.swing.JCheckBox bills1;
    private javax.swing.JCheckBox confi;
    private javax.swing.JCheckBox confi1;
    private mpv5.ui.beans.LabeledTextField confi_alert;
    private mpv5.ui.beans.LabeledTextField confi_warn;
    private javax.swing.JButton copy;
    private javax.swing.JButton copy1;
    private javax.swing.JCheckBox deliv;
    private javax.swing.JCheckBox deliv1;
    private mpv5.ui.beans.LabeledTextField deliv_alert;
    private mpv5.ui.beans.LabeledTextField deliv_warn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private mpv5.ui.beans.LabeledCombobox labeledCombobox2;
    private mpv5.ui.beans.LabeledTextField labeledTextField2;
    private javax.swing.JCheckBox offer;
    private javax.swing.JCheckBox offer1;
    private mpv5.ui.beans.LabeledTextField offer_alert;
    private mpv5.ui.beans.LabeledTextField offer_warn;
    private mpv5.ui.beans.LabeledTextField order_alert;
    private mpv5.ui.beans.LabeledTextField order_warn;
    private javax.swing.JCheckBox orders;
    private javax.swing.JCheckBox orders1;
    private javax.swing.JButton remove;
    // End of variables declaration//GEN-END:variables

    public Component getAndRemoveActionPanel() {
        this.remove(jPanel2);
        validate();
        return jPanel2;
    }

    public void setValues(PropertyStore values) {
        oldvalues = values;
    }

    public String getUname() {
        return "StageTypes";
    }

    public void reset() {
        setValues(oldvalues);
    }

    private void setData() {
        try {
            final ArrayList<DatabaseObject> STypes = DatabaseObject.getObjects(Context.getScheduleTypes(), true);
            Object[][] data = new Object[STypes.size()][3];

            for (int i = 0; i < STypes.size(); i++) {
                ScheduleTypes st = (ScheduleTypes) STypes.get(i);
                data[i][0] = (DatabaseObject) st;
                data[i][1] = User.getUsername(st.__getUserSids());
                data[i][2] = st.__getCname();
            }
            MPTableModel m = new MPTableModel(data);
            m.setTypes(new Class[]{DatabaseObject.class,
                        String.class,
                        String.class});
            jTable1.setModel(m);
            jTable1.getColumn(m.getColumnIdentifiers().get(0)).setMinWidth(0);
            jTable1.getColumn(m.getColumnIdentifiers().get(0)).setMaxWidth(0);
            jTable1.getColumn(m.getColumnIdentifiers().get(0)).setResizable(false);
        } catch (NodataFoundException ex) {
            Log.Debug(this, ex);
        }
    }

    private void initTable() {
        jTable1.setDefaultRenderer(String.class,
                rend);
        jTable1.setDefaultRenderer(DatabaseObject.class,
                rend);
        TableFormat.hideHeader(jTable1);
    }

    private void setPropertys() {
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("bills.warn.days", bill_warn.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("bills.alert.days", bill_alert.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("order.warn.days", order_warn.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("order.alert.days", order_alert.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("offer.warn.days", offer_warn.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("offer.alert.days", offer_alert.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("deliver.warn.days", deliv_warn.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("deliver.alert.days", deliv_alert.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("confirmation.warn.days", confi_warn.getText());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("confirmation.alert.days", confi_alert.getText());

        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "hideunpaidbills", bills.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "hideunattentedorders", orders.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "hideunacceptedoffers", offer.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "hideunattenteddeliverys", deliv.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "hideunattentedconfirmations", confi.isSelected());
        
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "usebills", bills1.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "useorders", orders1.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "useoffers", offer1.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "usedeliverys", deliv1.isSelected());
        mpv5.db.objects.User.getCurrentUser().getProperties().changeProperty("org.openyabs.uiproperty", "confirmations", confi1.isSelected());
    }

    private void loadPropertys() {
        bills.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "hideunpaidbills"));
        orders.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "hideunattentedorders"));
        offer.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "hideunacceptedoffers"));
        deliv.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "hideunattenteddeliverys"));
        confi.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "hideunattentedconfirmations"));

        bills1.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "usebills"));
        orders1.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "useorders"));
        offer1.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "useoffers"));
        deliv1.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "usedeliverys"));
        confi1.setSelected(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("org.openyabs.uiproperty", "useconfirmations"));

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("bills.warn.days")) {
            bill_warn.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("bills.warn.days"));
        } else {
            bill_warn.setText("14");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("bills.alert.days")) {
            bill_alert.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("bills.alert.days"));
        } else {
            bill_alert.setText("30");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("order.warn.days")) {
            order_warn.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("order.warn.days"));
        } else {
            order_warn.setText("14");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("order.alert.days")) {
            order_alert.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("order.alert.days"));
        } else {
            order_alert.setText("30");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("offer.warn.days")) {
            offer_warn.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("offer.warn.days"));
        } else {
            offer_warn.setText("14");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("offer.alert.days")) {
            offer_alert.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("offer.alert.days"));
        } else {
            offer_alert.setText("30");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("deliver.warn.days")) {
            deliv_warn.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("deliver.warn.days"));
        } else {
            deliv_warn.setText("14");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("deliver.alert.days")) {
            deliv_alert.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("deliver.alert.days"));
        } else {
            deliv_alert.setText("30");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("confirmation.warn.days")) {
            confi_warn.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("confirmation.warn.days"));
        } else {
            confi_warn.setText("14");
        }

        if (mpv5.db.objects.User.getCurrentUser().getProperties().hasProperty("confirmation.alert.days")) {
            confi_alert.setText(mpv5.db.objects.User.getCurrentUser().getProperties().getProperty("confirmation.alert.days"));
        } else {
            confi_alert.setText("30");
        }
    }
}
