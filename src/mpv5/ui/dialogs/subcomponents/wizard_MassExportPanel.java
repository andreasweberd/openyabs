/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mpv5.ui.dialogs.subcomponents;

import java.awt.Cursor;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import mpv5.db.common.Context;
import mpv5.db.common.DatabaseObject;
import mpv5.db.common.NodataFoundException;
import mpv5.db.objects.Contact;
import mpv5.db.objects.Group;
import mpv5.db.objects.Item;
import mpv5.ui.dialogs.Popup;
import mpv5.ui.dialogs.WizardMaster;
import mpv5.ui.dialogs.Wizardable;
import mpv5.ui.panels.DataPanel;

/**
 *
 * @author andreas
 */
public class wizard_MassExportPanel extends javax.swing.JPanel implements Wizardable {

    private static final long serialVersionUID = 335532489811876847L;

    private final WizardMaster master;

    private final Map<Contact, List<Item>> data;

    /**
     * Creates new form wizard_MassExportPanel
     *
     * @param master
     * @param data
     */
    public wizard_MassExportPanel(WizardMaster master, final Map<Contact, List<Item>> data) {
        initComponents();
        this.master = master;
        this.data = data;
        labeledCombobox1.setSearchEnabled(true);
        labeledCombobox1.setContext(Context.getGroup());
        labeledCombobox1.triggerSearch();

        /*    
       jTextArea1.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
       Runnable runnable = new Runnable() {
            public void run() {

                Set<String> res = new HashSet<>();
                for (Map.Entry<Contact, List<Item>> entry : data.entrySet()) {
                    Contact key = entry.getKey();
                    List<Item> value = entry.getValue();
                    for (int i = 0; i < value.size(); i++) {
                        Item get = value.get(i);
                        res.add(User.getSaveDir(get).toString());
                    }
                }
                String t = "";
                for (String path : res) {
                    t += path + "\n";
                }
                final String tt = t;
                Runnable runnable1 = new Runnable() {
                    public void run() {
                        jTextArea1.setText(tt);
                        jTextArea1.setCursor(Cursor.getDefaultCursor());
                    }
                };
                SwingUtilities.invokeLater(runnable1);
            }
        };
        new Thread(runnable).start();*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labeledCombobox1 = new mpv5.ui.beans.LabeledCombobox();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setName("Form"); // NOI18N

        java.util.ResourceBundle bundle = mpv5.i18n.LanguageManager.getBundle(); // NOI18N
        labeledCombobox1.set_Label(bundle.getString("wizard_MassExportPanel.labeledCombobox1._Label")); // NOI18N
        labeledCombobox1.setName("labeledCombobox1"); // NOI18N

        jLabel1.setText(bundle.getString("wizard_MassExportPanel.jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jCheckBox1.setSelected(true);
        jCheckBox1.setText(bundle.getString("wizard_MassExportPanel.jCheckBox1.text")); // NOI18N
        jCheckBox1.setName("jCheckBox1"); // NOI18N

        jCheckBox2.setSelected(true);
        jCheckBox2.setText(bundle.getString("wizard_MassExportPanel.jCheckBox2.text")); // NOI18N
        jCheckBox2.setName("jCheckBox2"); // NOI18N

        jLabel2.setText(bundle.getString("wizard_MassExportPanel.jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(bundle.getString("wizard_MassExportPanel.jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jCheckBox3.setText(bundle.getString("wizard_MassExportPanel.jCheckBox3.text")); // NOI18N
        jCheckBox3.setName("jCheckBox3"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setName("jTextArea2"); // NOI18N
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCheckBox3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE))
                        .addGap(331, 339, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labeledCombobox1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labeledCombobox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public boolean next() {
        try {
            doit();
        } catch (Exception ex) {
            Logger.getLogger(wizard_MassExportPanel.class.getName()).log(Level.SEVERE, null, ex);
            Popup.error(ex);
        }
        return false;
    }

    @Override
    public boolean back() {
        return false;
    }

    @Override
    public void load() {
    }

    private void doit() throws NodataFoundException {

        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {

                int index = 1;
                master.getProgressbar().setMaximum(data.size());
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                // jTextArea1.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                jTextArea2.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                for (Map.Entry<Contact, List<Item>> entry : data.entrySet()) {

                    try {
                        final Contact key = entry.getKey();
                        final List<Item> value = entry.getValue();
                        Item i = Item.createFor(key);

                        i.setGroup((Group) Group.getObject(Context.getGroup(), Integer.valueOf(labeledCombobox1.getSelectedItem().getId())));
                        DataPanel tab = mpv5.YabsViewProxy.instance().getIdentifierView().addTab(i, true);

                        tab.paste(value.toArray(new DatabaseObject[value.size()]));

                        final DatabaseObject dato = tab.getDataOwner();
                        tab.actionBeforeCreate();
                        boolean error = false;
                        if (dato.getPanelData(tab) && dato.save()) {
                            tab.actionAfterCreate();
                            tab.setDataOwner(dato, true);
                            if (jCheckBox1.isSelected()) {
                                dato.toPdf(false);
                            }
                            if (!jCheckBox3.isSelected()) {
                                mpv5.YabsViewProxy.instance().getIdentifierView().removeTab(tab);
                            }

                            jTextArea2.append("Created: " + dato + " ... SUCCESS!\n");
                        } else {
                            jTextArea2.append("\nCreated: " + dato + " ... FAILURE\n");
                            tab.showRequiredFields();
                            error = true;
                        }

                        if (jCheckBox2.isSelected() && !error) {
                            for (int j = 0; j < value.size(); j++) {
                                Item get = value.get(j);
                                get.setIntstatus(Item.STATUS_FINISHED);
                                get.save();
                            }
                        }
                        master.getProgressbar().setValue(index++);
                    } catch (Exception ex) {
                        Logger.getLogger(wizard_MassExportPanel.class.getName()).log(Level.SEVERE, null, ex);
                        Popup.error(ex);
                    }
                }
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                // jTextArea1.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                jTextArea2.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                master.isEnd(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private mpv5.ui.beans.LabeledCombobox labeledCombobox1;
    // End of variables declaration//GEN-END:variables
}
